CREATE TABLE TB_COMMENT (
    COMMENT_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    POST_ID             NUMBER NOT NULL,
    USER_ID             NUMBER NOT NULL,
    PARENT_COMMENT_ID   NUMBER,
    COMMENT_CONTENT     VARCHAR2(500) NOT NULL,
    COMMENT_CREATED_AT  TIMESTAMP DEFAULT SYSTIMESTAMP,
    COMMENT_UPDATED_AT  TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (POST_ID) REFERENCES TB_POST(POST_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (PARENT_COMMENT_ID) REFERENCES TB_COMMENT(COMMENT_ID) ON DELETE CASCADE
);

CREATE INDEX IDX_COMMENT_POST_ID ON TB_COMMENT (POST_ID);
CREATE INDEX IDX_COMMENT_USER_ID ON TB_COMMENT (USER_ID);
CREATE INDEX IDX_COMMENT_PARENT_ID ON TB_COMMENT (PARENT_COMMENT_ID);

-- 6. 댓글 테이블 (TB_COMMENT) 주석 추가
COMMENT ON TABLE TB_COMMENT IS '게시글에 대한 댓글 정보를 저장하는 테이블';
COMMENT ON COLUMN TB_COMMENT.COMMENT_ID IS '댓글 고유 ID (기본 키)';
COMMENT ON COLUMN TB_COMMENT.POST_ID IS '댓글이 달린 게시글 ID (TB_POST 참조)';
COMMENT ON COLUMN TB_COMMENT.USER_ID IS '댓글 작성자 ID (TB_USER 참조)';
COMMENT ON COLUMN TB_COMMENT.PARENT_COMMENT_ID IS '부모 댓글 ID (대댓글인 경우, TB_COMMENT 참조)';
COMMENT ON COLUMN TB_COMMENT.COMMENT_CONTENT IS '댓글 내용';
COMMENT ON COLUMN TB_COMMENT.COMMENT_CREATED_AT IS '댓글 생성일시';
COMMENT ON COLUMN TB_COMMENT.COMMENT_UPDATED_AT IS '댓글 수정일시';