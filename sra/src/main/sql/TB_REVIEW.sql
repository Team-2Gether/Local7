CREATE TABLE TB_REVIEW (
    REVIEW_ID            NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    USER_ID              NUMBER NOT NULL,
    RESTAURANT_ID        NUMBER NOT NULL,
    REVIEW_RATING        NUMBER(2, 1) NOT NULL,
    REVIEW_CONTENT       CLOB NOT NULL,
    REVIEW_AI_SUMMARY    CLOB,
    REVIEW_AI_KEYWORDS   VARCHAR2(500),
    REVIEW_CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP,
    REVIEW_UPDATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES TB_RESTAURANT(RESTAURANT_ID) ON DELETE CASCADE,
    CONSTRAINT CK_REVIEW_RATING CHECK (REVIEW_RATING >= 0.5 AND REVIEW_RATING <= 5.0)
);

CREATE INDEX IDX_REVIEW_USER_ID ON TB_REVIEW (USER_ID);
CREATE INDEX IDX_REVIEW_RESTAURANT_ID ON TB_REVIEW (RESTAURANT_ID);

-- 4. 리뷰 테이블 (TB_REVIEW) 주석 추가
COMMENT ON TABLE TB_REVIEW IS '특정 맛집에 대한 상세 리뷰 및 AI 분석 결과를 저장하는 테이블';
COMMENT ON COLUMN TB_REVIEW.REVIEW_ID IS '리뷰 고유 ID (기본 키)';
COMMENT ON COLUMN TB_REVIEW.USER_ID IS '리뷰 작성자 ID (TB_USER 참조)';
COMMENT ON COLUMN TB_REVIEW.RESTAURANT_ID IS '리뷰 대상 맛집 ID (TB_RESTAURANT 참조)';
COMMENT ON COLUMN TB_REVIEW.REVIEW_RATING IS '리뷰 별점 (0.5 ~ 5.0)';
COMMENT ON COLUMN TB_REVIEW.REVIEW_CONTENT IS '리뷰 내용 원문';
COMMENT ON COLUMN TB_REVIEW.REVIEW_AI_SUMMARY IS 'AI가 요약한 리뷰 내용';
COMMENT ON COLUMN TB_REVIEW.REVIEW_AI_KEYWORDS IS 'AI가 추출한 핵심 키워드들 (콤마 구분)';
COMMENT ON COLUMN TB_REVIEW.REVIEW_CREATED_AT IS '리뷰 생성일시';
COMMENT ON COLUMN TB_REVIEW.REVIEW_UPDATED_AT IS '리뷰 수정일시';