CREATE TABLE REVIEWS (
    REVIEW_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    RESTAURANT_ID NUMBER NOT NULL,
    RATING NUMBER(2, 1) NOT NULL,
    CONTENT CLOB NOT NULL,
    AI_SUMMARY CLOB,
    AI_KEYWORDS VARCHAR2(500),
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANTS(RESTAURANT_ID) ON DELETE CASCADE,
    CONSTRAINT CK_REVIEWS_RATING CHECK (RATING >= 0.5 AND RATING <= 5.0)
);

CREATE INDEX IDX_REVIEWS_USER_ID ON REVIEWS (USER_ID);
CREATE INDEX IDX_REVIEWS_RESTAURANT_ID ON REVIEWS (RESTAURANT_ID);

-- 4. 리뷰 테이블 (TB_REVIEWS) 주석 추가
COMMENT ON TABLE TB_REVIEWS IS '특정 맛집에 대한 상세 리뷰 및 AI 분석 결과를 저장하는 테이블';
COMMENT ON COLUMN TB_REVIEWS.REVIEW_ID IS '리뷰 고유 ID (기본 키)';
COMMENT ON COLUMN TB_REVIEWS.USER_ID IS '리뷰 작성자 ID (TB_USERS 참조)';
COMMENT ON COLUMN TB_REVIEWS.RESTAURANT_ID IS '리뷰 대상 맛집 ID (TB_RESTAURANTS 참조)';
COMMENT ON COLUMN TB_REVIEWS.RATING IS '리뷰 별점 (0.5 ~ 5.0)';
COMMENT ON COLUMN TB_REVIEWS.CONTENT IS '리뷰 내용 원문';
COMMENT ON COLUMN TB_REVIEWS.AI_SUMMARY IS 'AI가 요약한 리뷰 내용';
COMMENT ON COLUMN TB_REVIEWS.AI_KEYWORDS IS 'AI가 추출한 핵심 키워드들 (콤마 구분)';
COMMENT ON COLUMN TB_REVIEWS.CREATED_AT IS '리뷰 생성일시';
COMMENT ON COLUMN TB_REVIEWS.UPDATED_AT IS '리뷰 수정일시';