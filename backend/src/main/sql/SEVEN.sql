CREATE TABLE TB_USER (
    USER_ID NUMBER NOT NULL PRIMARY KEY,
    RULE_ID NUMBER NOT NULL,
    LOGIN_ID VARCHAR2(50) NOT NULL UNIQUE,
    USER_NAME VARCHAR2(50) NOT NULL,
    USER_PASSWORD VARCHAR2(200),
    USER_EMAIL VARCHAR2(100) UNIQUE,
    USER_NICKNAME VARCHAR2(50) NOT NULL,
    USER_PROF_IMG_URL VARCHAR2(500),
    USER_BIO VARCHAR2(200),
    CREATE_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);


COMMENT ON TABLE TB_USER IS '사용자';
COMMENT ON COLUMN TB_USER.USER_ID IS '사용자 고유 ID';
COMMENT ON COLUMN TB_USER.RULE_ID IS '권한 ID';
COMMENT ON COLUMN TB_USER.LOGIN_ID IS '사용자 로그인 계정명';
COMMENT ON COLUMN TB_USER.USER_NAME IS '사용자 이름';
COMMENT ON COLUMN TB_USER.USER_PASSWORD IS '사용자 비밀번호';
COMMENT ON COLUMN TB_USER.USER_EMAIL IS '사용자 이메일 주소';
COMMENT ON COLUMN TB_USER.USER_NICKNAME IS '사용자 닉네임';
COMMENT ON COLUMN TB_USER.USER_PROF_IMG_URL IS '프로필 이미지 URL';
COMMENT ON COLUMN TB_USER.USER_BIO IS '사용자 자기소개';
COMMENT ON COLUMN TB_USER.CREATE_DATE IS '계정 생성 일시';
COMMENT ON COLUMN TB_USER.CREATED_ID IS '계정 생성 ID';
COMMENT ON COLUMN TB_USER.UPDATED_DATE IS '계정 정보 수정 일시';
COMMENT ON COLUMN TB_USER.UPDATED_ID IS '계정 정보 수정 ID';


CREATE TABLE TB_RESTAURANT (
    RESTAURANT_ID NUMBER NOT NULL PRIMARY KEY,
    RESTAURANT_NAME VARCHAR2(100) NOT NULL,
    ADDR_SIDO VARCHAR2(30),
    ADDR_SIGUNGU VARCHAR2(30),
    ADDR_DONG VARCHAR2(30),
    ADDR_DETAIL VARCHAR2(200),
    PHONE_NUMBER VARCHAR2(30),
    RESTAURANT_CATEGORY VARCHAR2(100),
    RESTAURANT_LAT NUMBER(10, 7),
    RESTAURANT_LON NUMBER(10, 7),
    OPEN_HOUR NUMBER(2),
    OPEN_MINUTE NUMBER(2),
    CLOSE_HOUR NUMBER(2),
    CLOSE_MINUTE NUMBER(2),
    BREAK_START_HOUR NUMBER(2),
    BREAK_START_MINUTE NUMBER(2),
    BREAK_END_HOUR NUMBER(2),
    BREAK_END_MINUTE NUMBER(2),
    RESTAURANT_HOLIDAY VARCHAR2(100),
    PARKING_INFO VARCHAR2(200),
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_RESTAURANT IS '맛집 정보';
COMMENT ON COLUMN TB_RESTAURANT.RESTAURANT_ID IS '맛집 ID';
COMMENT ON COLUMN TB_RESTAURANT.RESTAURANT_NAME IS '맛집 이름';
COMMENT ON COLUMN TB_RESTAURANT.ADDR_SIDO IS '맛집 주소(시/도)';
COMMENT ON COLUMN TB_RESTAURANT.ADDR_SIGUNGU IS '맛집 주소(시/군/구)';
COMMENT ON COLUMN TB_RESTAURANT.ADDR_DONG IS '맛집 주소(동/읍/면)';
COMMENT ON COLUMN TB_RESTAURANT.ADDR_DETAIL IS '주소 상세';
COMMENT ON COLUMN TB_RESTAURANT.PHONE_NUMBER IS '맛집 전화번호';
COMMENT ON COLUMN TB_RESTAURANT.RESTAURANT_CATEGORY IS '음식 카테고리';
COMMENT ON COLUMN TB_RESTAURANT.RESTAURANT_LAT IS '맛집 위치 위도';
COMMENT ON COLUMN TB_RESTAURANT.RESTAURANT_LON IS '맛집 위치 경도';
COMMENT ON COLUMN TB_RESTAURANT.OPEN_HOUR IS '영업 시작 시';
COMMENT ON COLUMN TB_RESTAURANT.OPEN_MINUTE IS '영업 시작 분';
COMMENT ON COLUMN TB_RESTAURANT.CLOSE_HOUR IS '영업 종료 시';
COMMENT ON COLUMN TB_RESTAURANT.CLOSE_MINUTE IS '영업 종료 분';
COMMENT ON COLUMN TB_RESTAURANT.BREAK_START_HOUR IS '브레이크 시작 시';
COMMENT ON COLUMN TB_RESTAURANT.BREAK_START_MINUTE IS '브레이크 시작 분';
COMMENT ON COLUMN TB_RESTAURANT.BREAK_END_HOUR IS '브레이크 종료 시';
COMMENT ON COLUMN TB_RESTAURANT.BREAK_END_MINUTE IS '브레이크 종료 분';
COMMENT ON COLUMN TB_RESTAURANT.RESTAURANT_HOLIDAY IS '휴무일';
COMMENT ON COLUMN TB_RESTAURANT.PARKING_INFO IS '주차 정보';
COMMENT ON COLUMN TB_RESTAURANT.CREATED_DATE IS '맛집 정보 생성 일시';
COMMENT ON COLUMN TB_RESTAURANT.CREATED_ID IS '맛집 정보 생성 ID';
COMMENT ON COLUMN TB_RESTAURANT.UPDATED_DATE IS '맛집 정보 수정 일시';
COMMENT ON COLUMN TB_RESTAURANT.UPDATED_ID IS '맛집 정보 수정 ID';



CREATE TABLE TB_POST (
    POST_ID NUMBER NOT NULL PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    RESTAURANT_ID NUMBER NOT NULL,
    POST_TITLE VARCHAR2(200),
    POST_CONTENT CLOB,
    LOCATION_TAG VARCHAR2(100),
    IS_NOTICE CHAR(1) DEFAULT 'N',
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_POST IS '게시글';
COMMENT ON COLUMN TB_POST.POST_ID IS '게시글 ID';
COMMENT ON COLUMN TB_POST.USER_ID IS '게시글 작성자';
COMMENT ON COLUMN TB_POST.RESTAURANT_ID IS '맛집 ID';
COMMENT ON COLUMN TB_POST.POST_TITLE IS '게시글 제목';
COMMENT ON COLUMN TB_POST.POST_CONTENT IS '게시글 내용';
COMMENT ON COLUMN TB_POST.LOCATION_TAG IS '위치 태그';
COMMENT ON COLUMN TB_POST.IS_NOTICE IS '공지사항 여부 (Y: 공지사항, N: 일반 게시글)';
COMMENT ON COLUMN TB_POST.CREATED_DATE IS '게시글 생성 일시';
COMMENT ON COLUMN TB_POST.CREATED_ID IS '게시글 생성 ID';
COMMENT ON COLUMN TB_POST.UPDATED_DATE IS '게시글 수정 일시';
COMMENT ON COLUMN TB_POST.UPDATED_ID IS '게시글 수정 ID';


CREATE TABLE TB_REVIEW (
    REVIEW_ID NUMBER NOT NULL PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    RESTAURANT_ID NUMBER NOT NULL,
    REVIEW_RATING NUMBER(2, 1) NOT NULL,
    REVIEW_CONTENT CLOB NOT NULL,
    AI_SUMMARY CLOB,
    AI_KEYWORDS VARCHAR2(500),
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_REVIEW IS '리뷰';
COMMENT ON COLUMN TB_REVIEW.REVIEW_ID IS '리뷰 ID';
COMMENT ON COLUMN TB_REVIEW.USER_ID IS '리뷰 작성자 ID';
COMMENT ON COLUMN TB_REVIEW.RESTAURANT_ID IS '리뷰 대상 맛집 ID';
COMMENT ON COLUMN TB_REVIEW.REVIEW_RATING IS '리뷰 별점';
COMMENT ON COLUMN TB_REVIEW.REVIEW_CONTENT IS '리뷰 내용 원문';
COMMENT ON COLUMN TB_REVIEW.AI_SUMMARY IS 'AI가 요약한 리뷰 내용';
COMMENT ON COLUMN TB_REVIEW.AI_KEYWORDS IS 'AI가 추출한 키워드';
COMMENT ON COLUMN TB_REVIEW.CREATED_DATE IS '리뷰 생성 일시';
COMMENT ON COLUMN TB_REVIEW.CREATED_ID IS '리뷰 생성 ID';
COMMENT ON COLUMN TB_REVIEW.UPDATED_DATE IS '리뷰 수정 일시';
COMMENT ON COLUMN TB_REVIEW.UPDATED_ID IS '리뷰 수정 ID';


CREATE TABLE TB_LIKE (
    LIKE_ID NUMBER NOT NULL PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    POST_ID NUMBER,
    RESTAURANT_ID NUMBER,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100),
    CONSTRAINT CHK_LIKE_TARGET CHECK (
        (POST_ID IS NOT NULL AND RESTAURANT_ID IS NULL) OR
        (POST_ID IS NULL AND RESTAURANT_ID IS NOT NULL)
    )
);

COMMENT ON TABLE TB_LIKE IS '좋아요';
COMMENT ON COLUMN TB_LIKE.LIKE_ID IS '좋아요 ID';
COMMENT ON COLUMN TB_LIKE.USER_ID IS '사용자 ID';
COMMENT ON COLUMN TB_LIKE.POST_ID IS '게시글 ID';
COMMENT ON COLUMN TB_LIKE.RESTAURANT_ID IS '좋아요 대상 맛집 ID';
COMMENT ON COLUMN TB_LIKE.CREATED_DATE IS '좋아요 생성 일시';
COMMENT ON COLUMN TB_LIKE.CREATED_ID IS '좋아요 생성 ID';
COMMENT ON COLUMN TB_LIKE.UPDATED_DATE IS '좋아요 수정 일시';
COMMENT ON COLUMN TB_LIKE.UPDATED_ID IS '좋아요 수정 ID';



CREATE TABLE TB_COMMENT (
    COMMENT_ID NUMBER NOT NULL PRIMARY KEY,
    POST_ID NUMBER NOT NULL,
    USER_ID NUMBER NOT NULL,
    CONTENT VARCHAR2(500),
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_COMMENT IS '댓글';
COMMENT ON COLUMN TB_COMMENT.COMMENT_ID IS '댓글 ID';
COMMENT ON COLUMN TB_COMMENT.POST_ID IS '댓글 달린 게시글 ID';
COMMENT ON COLUMN TB_COMMENT.USER_ID IS '댓글 작성자 ID';
COMMENT ON COLUMN TB_COMMENT.CONTENT IS '댓글 내용';
COMMENT ON COLUMN TB_COMMENT.CREATED_DATE IS '댓글 생성일시';
COMMENT ON COLUMN TB_COMMENT.CREATED_ID IS '댓글 생성 ID';
COMMENT ON COLUMN TB_COMMENT.UPDATED_DATE IS '댓글 수정일시';
COMMENT ON COLUMN TB_COMMENT.UPDATED_ID IS '댓글 수정 ID';


CREATE TABLE TB_FOLLOW (
    FOLLOWER_ID NUMBER NOT NULL,
    FOLLOWING_ID NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100),
    PRIMARY KEY (FOLLOWER_ID, FOLLOWING_ID)
);

COMMENT ON TABLE TB_FOLLOW IS '팔로우';
COMMENT ON COLUMN TB_FOLLOW.FOLLOWER_ID IS '팔로우를 하는 사용자 ID';
COMMENT ON COLUMN TB_FOLLOW.FOLLOWING_ID IS '팔로우를 받는 사용자 ID';
COMMENT ON COLUMN TB_FOLLOW.CREATED_DATE IS '팔로우 관계 생성일시';
COMMENT ON COLUMN TB_FOLLOW.CREATED_ID IS '팔로우 관게 생성 ID';
COMMENT ON COLUMN TB_FOLLOW.UPDATED_DATE IS '팔로우 관계 수정일시';
COMMENT ON COLUMN TB_FOLLOW.UPDATED_ID IS '팔로우 관계 수정 ID';


CREATE TABLE TB_REPORT (
    REPORT_ID NUMBER NOT NULL PRIMARY KEY,
    REPORTER_ID NUMBER NOT NULL,
    TARGET_ID NUMBER,
    REPORT_TYPE VARCHAR2(20) NOT NULL,
    REPORT_REASON VARCHAR2(500),
    STATUS VARCHAR2(20),
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_REPORT IS '신고';
COMMENT ON COLUMN TB_REPORT.REPORT_ID IS '신고 ID';
COMMENT ON COLUMN TB_REPORT.REPORTER_ID IS '신고한 사용자 ID';
COMMENT ON COLUMN TB_REPORT.TARGET_ID IS '신고 대상 사용자 ID';
COMMENT ON COLUMN TB_REPORT.REPORT_TYPE IS '신고 유형';
COMMENT ON COLUMN TB_REPORT.REPORT_REASON IS '신고 사유';
COMMENT ON COLUMN TB_REPORT.STATUS IS '신고 처리';
COMMENT ON COLUMN TB_REPORT.CREATED_DATE IS '신고 접수 일시';
COMMENT ON COLUMN TB_REPORT.CREATED_ID IS '신고 접수 ID';
COMMENT ON COLUMN TB_REPORT.UPDATED_DATE IS '신고 처리 완료 일시';
COMMENT ON COLUMN TB_REPORT.UPDATED_ID IS '신고 처리 ID';


CREATE TABLE TB_TAG (
    TAG_ID NUMBER NOT NULL PRIMARY KEY,
    TAG_NAME VARCHAR2(100) NOT NULL UNIQUE,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_TAG IS '태그';
COMMENT ON COLUMN TB_TAG.TAG_ID IS '태그 ID';
COMMENT ON COLUMN TB_TAG.TAG_NAME IS '태그 이름';
COMMENT ON COLUMN TB_TAG.CREATED_DATE IS '태그 생성 일시';
COMMENT ON COLUMN TB_TAG.CREATED_ID IS '태그 생성 ID';
COMMENT ON COLUMN TB_TAG.UPDATED_DATE IS '태그 수정 일시';
COMMENT ON COLUMN TB_TAG.UPDATED_ID IS '태그 수정 ID';


CREATE TABLE TB_POST_TAG (
    POST_ID NUMBER NOT NULL,
    TAG_ID NUMBER NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100),
    PRIMARY KEY (POST_ID, TAG_ID)
);

COMMENT ON TABLE TB_POST_TAG IS '포스트, 태그 관계';
COMMENT ON COLUMN TB_POST_TAG.POST_ID IS '게시글 ID';
COMMENT ON COLUMN TB_POST_TAG.TAG_ID IS '태그 ID';
COMMENT ON COLUMN TB_POST_TAG.CREATED_DATE IS '관계 생성 일시';
COMMENT ON COLUMN TB_POST_TAG.CREATED_ID IS '관계 생성 ID';
COMMENT ON COLUMN TB_POST_TAG.UPDATED_DATE IS '관계 수정 일시';
COMMENT ON COLUMN TB_POST_TAG.UPDATED_ID IS '관계 수정 ID';


CREATE TABLE TB_RULE (
    RULE_ID NUMBER NOT NULL PRIMARY KEY,
    RULE_NAME VARCHAR2(50) NOT NULL UNIQUE,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_RULE IS '권한';
COMMENT ON COLUMN TB_RULE.RULE_ID IS '권한 ID';
COMMENT ON COLUMN TB_RULE.RULE_NAME IS '권한 이름';
COMMENT ON COLUMN TB_RULE.CREATED_DATE IS '권한 생성 일시';
COMMENT ON COLUMN TB_RULE.CREATED_ID IS '권한 생성 ID';
COMMENT ON COLUMN TB_RULE.UPDATED_DATE IS '권한 수정 일시';
COMMENT ON COLUMN TB_RULE.UPDATED_ID IS '권한 수정 ID';


CREATE TABLE TB_POST_IMAGE (
    IMAGE_ID NUMBER NOT NULL PRIMARY KEY,
    POST_ID NUMBER NOT NULL,
    IMAGE_URL VARCHAR2(500) NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    CREATED_ID VARCHAR2(100),
    UPDATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_ID VARCHAR2(100)
);

COMMENT ON TABLE TB_POST_IMAGE IS '게시글 이미지';
COMMENT ON COLUMN TB_POST_IMAGE.IMAGE_ID IS '이미지 ID';
COMMENT ON COLUMN TB_POST_IMAGE.POST_ID IS '게시글 ID';
COMMENT ON COLUMN TB_POST_IMAGE.IMAGE_URL IS '이미지 URL';
COMMENT ON COLUMN TB_POST_IMAGE.CREATED_DATE IS '이미지 생성 일시';
COMMENT ON COLUMN TB_POST_IMAGE.CREATED_ID IS '이미지 생성 ID';
COMMENT ON COLUMN TB_POST_IMAGE.UPDATED_DATE IS '이미지 수정 일시';
COMMENT ON COLUMN TB_POST_IMAGE.UPDATED_ID IS '이미지 수정 ID';

CREATE INDEX IDX_POST_USER_ID ON TB_POST (USER_ID);
CREATE INDEX IDX_POST_RESTAURANT_ID ON TB_POST (RESTAURANT_ID);
CREATE INDEX IDX_REVIEW_USER_ID ON TB_REVIEW (USER_ID);
CREATE INDEX IDX_REVIEW_RESTAURANT_ID ON TB_REVIEW (RESTAURANT_ID);
CREATE INDEX IDX_LIKE_USER_ID ON TB_LIKE (USER_ID);
CREATE INDEX IDX_LIKE_POST_ID ON TB_LIKE (POST_ID);
CREATE INDEX IDX_LIKE_RESTAURANT_ID ON TB_LIKE (RESTAURANT_ID);
CREATE INDEX IDX_COMMENT_POST_ID ON TB_COMMENT (POST_ID);
CREATE INDEX IDX_COMMENT_USER_ID ON TB_COMMENT (USER_ID);
CREATE INDEX IDX_FOLLOW_FOLLOWER_ID ON TB_FOLLOW (FOLLOWER_ID);
CREATE INDEX IDX_FOLLOW_FOLLOWING_ID ON TB_FOLLOW (FOLLOWING_ID);
CREATE INDEX IDX_REPORT_REPORTER_ID ON TB_REPORT (REPORTER_ID);
CREATE INDEX IDX_REPORT_TARGET_ID ON TB_REPORT (TARGET_ID);
CREATE INDEX IDX_POSTIMAGE_POST_ID ON TB_POST_IMAGE (POST_ID);

-- 사용자 시퀀스
DROP SEQUENCE SEQ_TB_USER;
CREATE SEQUENCE SEQ_TB_USER
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 맛집 시퀀스
DROP SEQUENCE SEQ_TB_RESTAURANT;
CREATE SEQUENCE SEQ_TB_RESTAURANT
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 게시글 시퀀스
DROP SEQUENCE SEQ_TB_POST;
CREATE SEQUENCE SEQ_TB_POST
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 리뷰 시퀀스
DROP SEQUENCE SEQ_TB_REVIEW;
CREATE SEQUENCE SEQ_TB_REVIEW
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 좋아요 시퀀스
DROP SEQUENCE SEQ_TB_LIKE;
CREATE SEQUENCE SEQ_TB_LIKE
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 댓글 시퀀스
DROP SEQUENCE SEQ_TB_COMMENT;
CREATE SEQUENCE SEQ_TB_COMMENT
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 신고 시퀀스
DROP SEQUENCE SEQ_TB_REPORT;
CREATE SEQUENCE SEQ_TB_REPORT
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 태그 시퀀스
DROP SEQUENCE SEQ_TB_TAG;
CREATE SEQUENCE SEQ_TB_TAG
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 권한 시퀀스
DROP SEQUENCE SEQ_TB_RULE;
CREATE SEQUENCE SEQ_TB_RULE
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

-- 게시글 이미지 시퀀스
DROP SEQUENCE SEQ_TB_POST_IMAGE;
CREATE SEQUENCE SEQ_TB_POST_IMAGE
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
