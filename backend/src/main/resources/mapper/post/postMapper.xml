<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.twogether.local7.post.dao.PostDAO">

    <resultMap id="postResultMap" type="com.twogether.local7.post.vo.PostVO">
        <id property="postId" column="POST_ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="restaurantId" column="RESTAURANT_ID"/>
        <result property="postTitle" column="POST_TITLE"/>
        <result property="postContent" column="POST_CONTENT"/>
        <result property="locationTag" column="LOCATION_TAG"/>
        <result property="isNotice" column="IS_NOTICE"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="createdId" column="CREATED_ID"/>
        <result property="updatedDate" column="UPDATED_DATE"/>
        <result property="updatedId" column="UPDATED_ID"/>
        <result property="userNickname" column="USER_NICKNAME"/>
        <result property="firstImageUrl" column="FIRST_IMAGE_URL"/>

        <collection property="images" ofType="com.twogether.local7.post.vo.ImageVO">
            <id property="imageId" column="IMAGE_ID"/>
            <result property="postId" column="P_IMAGE_POST_ID"/>
            <result property="imageUrl" column="IMAGE_URL"/>
            <result property="createdDate" column="I_CREATED_DATE"/>
            <result property="createdId" column="I_CREATED_ID"/>
            <result property="updatedDate" column="I_UPDATED_DATE"/>
            <result property="updatedId" column="I_UPDATED_ID"/>
        </collection>
    </resultMap>

    <select id="getAllPosts" resultMap="postResultMap">
        SELECT
            p.POST_ID,
            p.USER_ID,
            p.RESTAURANT_ID,
            p.POST_TITLE,
            p.POST_CONTENT,
            p.LOCATION_TAG,
            p.IS_NOTICE,
            p.CREATED_DATE,
            p.CREATED_ID,
            p.UPDATED_DATE,
            p.UPDATED_ID,
            u.USER_NICKNAME,
            pi.IMAGE_URL AS FIRST_IMAGE_URL
        FROM
            TB_POST p
        JOIN
            TB_USER u ON p.USER_ID = u.USER_ID
        LEFT JOIN (
            SELECT
                PI2.POST_ID,
                PI2.IMAGE_URL,
                ROW_NUMBER() OVER (PARTITION BY PI2.POST_ID ORDER BY PI2.IMAGE_ID) as rn
            FROM
                TB_POST_IMAGE PI2
        ) pi ON p.POST_ID = pi.POST_ID AND pi.rn = 1
        ORDER BY
            p.CREATED_DATE DESC
    </select>

    <select id="getPostById" resultMap="postResultMap">
        SELECT
            p.POST_ID, p.USER_ID, p.RESTAURANT_ID, p.POST_TITLE, p.POST_CONTENT,
            p.LOCATION_TAG, p.IS_NOTICE, p.CREATED_DATE, p.CREATED_ID, p.UPDATED_DATE, p.UPDATED_ID,
            u.USER_NICKNAME,
            pi.IMAGE_ID, pi.POST_ID AS P_IMAGE_POST_ID, pi.IMAGE_URL,
            pi.CREATED_DATE AS I_CREATED_DATE, pi.CREATED_ID AS I_CREATED_ID,
            pi.UPDATED_DATE AS I_UPDATED_DATE, pi.UPDATED_ID AS I_UPDATED_ID
        FROM TB_POST p
            JOIN TB_USER u ON p.USER_ID = u.USER_ID
            LEFT JOIN TB_POST_IMAGE pi ON p.POST_ID = pi.POST_ID
        WHERE p.POST_ID = #{postId}
    </select>

    <insert id="insertPost" parameterType="com.twogether.local7.post.vo.PostVO">
        <selectKey keyProperty="postId" resultType="long" order="BEFORE">
            SELECT TB_POST_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TB_POST (
            POST_ID, USER_ID, RESTAURANT_ID, POST_TITLE, POST_CONTENT,
            LOCATION_TAG, IS_NOTICE, CREATED_DATE, CREATED_ID, UPDATED_DATE, UPDATED_ID
        ) VALUES (
            #{postId}, #{userId}, #{restaurantId}, #{postTitle}, #{postContent},
            #{locationTag}, #{isNotice}, SYSTIMESTAMP, #{createdId}, SYSTIMESTAMP, #{updatedId}
        )
    </insert>

    <update id="updatePost" parameterType="com.twogether.local7.post.vo.PostVO">
        UPDATE TB_POST
        SET
            POST_TITLE = #{postTitle},
            POST_CONTENT = #{postContent},
            LOCATION_TAG = #{locationTag},
            IS_NOTICE = #{isNotice},
            UPDATED_DATE = SYSTIMESTAMP,
            UPDATED_ID = #{updatedId}
        WHERE POST_ID = #{postId} AND USER_ID = #{userId} </update>

    <delete id="deletePost" parameterType="map">
        DELETE FROM TB_POST
        WHERE POST_ID = #{postId} AND USER_ID = #{userId}
    </delete>

</mapper>