spring.application.name=sra

# 포트 설정
server.port=8080

# AI 서버 URL (FastAPI 서버 주소)
ai.server.url=http://localhost:8000

# Oracle Database 설정
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.generate-ddl=false

# 데이터소스 설정 (test)
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
#spring.datasource.username=sevenlocal
#spring.datasource.password=7777
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Gmail SMTP 설정 (메일 발송용)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ssqod1202@gmail.com
spring.mail.password=ailk lxvv msop voqv
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8

# MyBatis 설정
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.twogether.local7.post.vo

# 로그 레벨 설정
logging.level.root=INFO

# MyBatis SQL 로그 출력
logging.level.org.apache.ibatis=DEBUG
logging.level.java.sql.Connection=DEBUG
logging.level.java.sql.Statement=DEBUG
logging.level.java.sql.PreparedStatement=DEBUG
logging.level.java.sql.ResultSet=DEBUG

# Spring JDBC 로그 설정
logging.level.org.springframework.jdbc.core=DEBUG

# Spring MVC 요청 처리 로그 설정
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=DEBUG

# 파일 업로드 경로 및 정적 리소스 위치 설정
# file.upload-dir=C:/dev/upload_images/
# spring.web.resources.static-locations=file:${file.upload-dir},classpath:/static/,classpath:/public/
# spring.mvc.static-path-pattern=/uploads/**

# Google OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=1063398919311-5ufdggou0han0klvdc9qqs3i099uleaa.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-request-parameters.prompt=select_account

spring.security.oauth2.client.registration.kakao.client-id=3d0097c2b1a5131da26af9e3d3ed09f7
spring.security.oauth2.client.registration.kakao.client-secret=OeebB2GiFWOjGaoJej1I0nqOWwb1YBVC
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# 데이터소스 설정 (원격 Oracle 서버)
spring.datasource.url=jdbc:oracle:thin:@116.36.205.25:1524:XE
spring.datasource.username=seven
spring.datasource.password=7777
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver